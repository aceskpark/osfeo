#ifndef __EMP_CULA_SPARSE_LEGACY_H__
#define __EMP_CULA_SPARSE_LEGACY_H__

/*
 * Copyright (C) 2009-2012 EM Photonics, Inc.  All rights reserved.
 *
 * NOTICE TO USER:   
 *
 * This source code is subject to EM Photonics ownership rights under U.S. and
 * international Copyright laws.  Users and possessors of this source code may
 * not redistribute this code without the express written consent of EM
 * Photonics, Inc.
 *
 * EM PHOTONICS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS SOURCE
 * CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT EXPRESS OR IMPLIED
 * WARRANTY OF ANY KIND.  EM PHOTONICS DISCLAIMS ALL WARRANTIES WITH REGARD TO
 * THIS SOURCE CODE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY,
 * NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO EVENT SHALL EM
 * PHOTONICS BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL
 * DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS,  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION,  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOURCE CODE.  
 *
 * U.S. Government End Users.   This source code is a "commercial item" as that
 * term is defined at  48 C.F.R. 2.101 (OCT 1995), consisting  of "commercial
 * computer  software"  and "commercial computer software documentation" as
 * such terms are  used in 48 C.F.R. 12.212 (SEPT 1995) and is provided to the
 * U.S. Government only as a commercial end item.  Consistent with 48
 * C.F.R.12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (JUNE 1995), all
 * U.S. Government End Users acquire the source code with only those rights set
 * forth herein. 
 *
 * Any use of this source code in individual and commercial software must
 * include, in the user documentation and internal comments to the code, the
 * above Disclaimer and U.S. Government End Users Notice.
 *
 */

/// 
/// \file cula_sparse_legacy.h
/// 

#include "cula_sparse_common.h"

#ifdef __cplusplus
extern "C" {
#endif

/// Solvers

culaSparseStatus culaSparseHostScooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostScscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostDcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostCcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseHostZcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseHostOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaScscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaCcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaZcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowPtr, const int* colInd, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceScscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const float* a, const int* rowInd, const int* colPtr, float* x, const float* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowPtr, const int* colInd, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceDcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const double* a, const int* rowInd, const int* colPtr, double* x, const double* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowPtr, const int* colInd, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceCcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexFloat* a, const int* rowInd, const int* colPtr, culaSparseComplexFloat* x, const culaSparseComplexFloat* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcooMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCooOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcsrMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCsrOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowPtr, const int* colInd, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstab(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstabAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstabBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstabFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstabIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstabJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstabOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstabl(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstablAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstablBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstablFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstablIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscBicgstablJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseBicgstablOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscCg(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscCgAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscCgBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscCgFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscCgIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscCgJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseCgOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscGmres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscGmresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscGmresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscGmresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscGmresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscGmresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseGmresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscMinres(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseEmptyOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscMinresAinv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseAinvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscMinresBlockJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseBlockjacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscMinresFainv(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseFainvOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscMinresIlu0(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseIlu0Options* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);
culaSparseStatus culaSparseCudaDeviceZcscMinresJacobi(culaSparseHandle handle, const culaSparseConfig* config, const culaSparseCudaDeviceOptions* platformOpts, const culaSparseCscOptions* formatOpts, const culaSparseMinresOptions* solverOpts, const culaSparseJacobiOptions* precondOpts, int n, int nnz, const culaSparseComplexDouble* a, const int* rowInd, const int* colPtr, culaSparseComplexDouble* x, const culaSparseComplexDouble* b, culaSparseResult* result);

#ifdef __cplusplus
} // extern "C"
#endif

#endif // __EMP_CULA_SPARSE_LEGACY_H__

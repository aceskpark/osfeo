##################################################################
## Rcsection.tcl                                                                                                                                            #
## Define a procedure which generates a rectangular reinforced concrete section                                                                                                                                 #                                                                      
## Written: Li SHuang
## Copyright of Hrabin Institute of Technology
## Date: OTC. 2004
## Modify: 1/12/2004                                                                                                                                                    #
##################################################################
##
# 
#                       y
#                       |
#                       |
#                       |    
#             ---------------------
#             |\                 /|    
#             | \---------------/ |
#             | |               | |
#             | |               | |
#  z ---------| |               | |  h
#             | |               | |
#             | |               | |
#             | /---------------\ |
#             |/                 \|
#             ---------------------
#                       b
#



# ================
# Formal Arguments
# ================

# id - tag for the section that is generated by this procedure

# h - overall height of the section (see above)

# b - overall width of the section (see above)

# cover - thickness of the cover patches

# coreID - material tag for the core patch

# coverID - material tag for the cover patches

# steelID - material tag for the reinforcing steel

# numBars - number of reinforcing bars on any given side of the section.in beam:1-up,2-up,down

# barArea - cross-sectional area of each reinforcing bar

# nfCoreY - number of fibers in the core patch in the y direction

# nfCoreZ - number of fibers in the core patch in the z direction

# nfCoverY - number of fibers in the cover patches with long sides in the y direction

# nfCoverZ - number of fibers in the cover patches with long sides in the z direction
# Bf-beam flanger

# Notes:Column

# The thickness of cover concrete is constant on all sides of the core.
 
# The number of bars is the same on any given side of the section----column.

# The reinforcing bars are all the same size in column.

# The number of fibers in the short direction of the cover patches is set to 1.
# Division
# core - 10 * 10
# cover - 12 * 12

# ======================
# Define Proc For Column
# ======================


proc  RcColumnSection  {id h b numBars  barArea coreID coverID steelID \
      fc E {TmatID 7} {cover  0.045}  {nfCoreY 10}  {nfCoreZ  10}  \
      {nfCoverY 12}    { nfCoverZ 12}} {

      # The distance from the section z-axis to the edge of the cover concrete
      # in the positive y direction
      set coverY [expr $h/2.0]

      # The distance from the section y-axis to the edge of the cover concrete
      # in the positive z direction
      set coverZ [expr $b/2.0]

      # The negative values of the two above
      set ncoverY [expr -$coverY]
      set ncoverZ [expr -$coverZ]

      # Determine the corresponding values from the respective axes to the
      # edge of the core concrete
      set coreY [expr $coverY-$cover]
      set coreZ [expr $coverZ-$cover]
      set ncoreY [expr -$coreY]
      set ncoreZ [expr -$coreZ]

      # Define the fiber section,tag 1000+$id is  abitrarily  assuming 
      section Fiber [expr 1000+$id] {

              # Define the core patch
              patch quadr $coreID $nfCoreZ $nfCoreY $ncoreY $coreZ $ncoreY $ncoreZ $coreY $ncoreZ $coreY $coreZ

              # Define the four cover patches
              patch quadr $coverID 1 $nfCoverY $ncoverY $coverZ $ncoreY  $coreZ   $coreY  $coreZ   $coverY $coverZ
              patch quadr $coverID 1 $nfCoverY $ncoreY  $ncoreZ $ncoverY $ncoverZ $coverY $ncoverZ $coreY  $ncoreZ
              patch quadr $coverID $nfCoverZ 1 $ncoverY $coverZ $ncoverY $ncoverZ $ncoreY $ncoreZ  $ncoreY $coreZ
              patch quadr $coverID $nfCoverZ 1 $coreY   $coreZ  $coreY   $ncoreZ  $coverY $ncoverZ $coverY $coverZ

              # Define the steel along constant values of y (in the z direction)
              layer straight $steelID $numBars $barArea $ncoreY $coreZ $ncoreY $ncoreZ
              layer straight $steelID $numBars $barArea $coreY $coreZ $coreY $ncoreZ

              # Determine the spacing for the remaining bars in the y direction
              set spacingY [expr ($coreY-$ncoreY)/($numBars-1)]

              # Avoid double counting bars
              set numBars [expr $numBars-2]

              # Define remaining steel in the y direction
              layer straight $steelID $numBars $barArea [expr $coreY-$spacingY] $coreZ [expr $ncoreY+$spacingY] $coreZ
              layer straight $steelID $numBars $barArea [expr $coreY-$spacingY] $ncoreZ [expr $ncoreY+$spacingY] $ncoreZ
     }   
     # Attach shear to the RC column section
     
     # Define material constitute to represent the relation of shear and deformation of the section
     # Use steel01 to model the "Bilinear" relattionship 
     # Asumping the maxmum V equal to the strengh when incline press damage take in section 
     
     set betac 1.0;# concrete influence confficent
     set k     6/5.0;# section cofficent = 1/0.8333
     set afa   1.0/$k
     set V     [expr 0.25*$betac*$fc*$b*($h-0.045)]
     set aGA   [expr $afa*0.40*$E*$b*$h]

     #set shear "ON"
     set shear "OFF"
     if { $shear == "ON" } {
        #                         matTag         V    GA    b 
        uniaxialMaterial Steel01 [expr 1000+$id] $V   $aGA  0.001
     } 
     if { $shear == "OFF" } {
        #                         matTag         V    GA        b 
        uniaxialMaterial Steel01 [expr 1000+$id] $V   1.0e20    1
     }      
         
     # secTag    matTag    string   sectionTag
     section Aggregator  $id  [expr 1000+$id] Vy  -section [expr 1000+$id]

     
}



# =======================
# Define Proc For Beam
# =======================
# numBarUp1--up fisrt row bar
# numBarUp2--up second row bar
# Flange of "L" set it in left direction
# Note:Division
#      core - 10 * 1
#      left and right cover - 1 * 12
#      up und down cover - 1 * 1
#      flange - (1 patch between two plate bar) * 2
#                       y
#                       |
#                       |
#                       |    
#       |-------------------------------|
#       |     |                   |     |
#       |     |-------------------|     |
#       |-----| |               | |-----|
#             | |               | |
#  z ---------| |               | |  h
#             | |               | |
#             | |               | |
#             | /---------------\ |
#             |/                 \|
#             ---------------------
#                       b
#

proc  RcBeamSection  {id h b numBarsUp1 barAreaUp1 numBarsDown barAreaDown   coreID coverID steelID \
      {shape T} Bf fc E { pSteelSpace 0.15} {TmatID 7} {plateSteelID 6} {numBarsUp2 0} \
      {barAreaUp2 0} {cover  0.045} {nfCoreY  10} {nfCoreZ  1} {nfCoverY 12} \
      { nfCoverZ 1} } {

      # The distance from the section z-axis to the edge of the cover concrete
      # in the positive y direction
      set coverY [expr $h/2.0]

      # The distance from the section y-axis to the edge of the cover concrete
      # in the positive z direction
      set coverZ [expr $b/2.0]

      # The negative values of the two above
      set ncoverY [expr -$coverY]
      set ncoverZ [expr -$coverZ]

      # Determine the corresponding values from the respective axes to the
      # edge of the core concrete
      set coreY  [expr $coverY-$cover]
      set coreZ  [expr $coverZ-$cover]
      set ncoreY [expr -$coreY]
      set ncoreZ [expr -$coreZ]
         
      # Define the fiber section,tag 2000+$id is  abitrarily  assuming    
      section  Fiber  [expr 2000+$id]  {

               # Define the core patch
               patch quadr $coreID $nfCoreZ $nfCoreY $ncoreY $coreZ $ncoreY $ncoreZ $coreY $ncoreZ $coreY $coreZ
                    
               # Define the four cover patches
               patch quadr $coverID 1 $nfCoverY $ncoverY $coverZ $ncoreY $coreZ $coreY $coreZ $coreY $coverZ
               patch quadr $coverID 1 $nfCoverY $ncoreY $ncoreZ $ncoverY $ncoverZ $coreY $ncoverZ $coreY $ncoreZ
               patch quadr $coverID $nfCoverZ 1 $ncoverY $coverZ $ncoverY $ncoverZ $ncoreY $ncoreZ $ncoreY $coreZ
               patch quadr $coverID $nfCoverZ 1 $coreY $coverZ $coreY $ncoverZ $coverY $ncoverZ $coverY $coverZ                 

               # Define the steel along constant values of y (in the z direction)
               layer straight $steelID $numBarsUp1 $barAreaUp1  $coreY $coreZ $coreY $ncoreZ
               layer straight $steelID $numBarsDown $barAreaDown $ncoreY $coreZ $ncoreY $ncoreZ
               #If there are two layer at  the up, use this item
               if { $numBarsUp2 == 0} {
                   #There is no the second layer at the up,do nothing
                   } else {
                   layer straight $steelID $numBarsUp2 $barAreaUP2  [expr $coreY-0.040] $coreZ [expr $coreY-0.040] $ncoreZ
               
                }

                #Define the patch in the  plate 
                set PlateDepth 0.12; #Define plate depth
                if  {$shape == "T"} {                   
                    ###set oneSideLength  [expr ($Bf-$b)/2.0];#Define  one side flange length of the section
                    ###set nflange           [expr int(($Bf-$b)/2.0/$pSteelSpace)+1];# define the number of fiber in one side 
                    ###patch quadr $coverID  [expr $nflange-1] 2 \
                    ###                      [expr $h/2.0-$PlateDepth] [expr ($nflange-1)*$pSteelSpace+$b/2.0] \
                    ###                      [expr $h/2.0-$PlateDepth] [expr $b/2.0] \
                    ###                      [expr $h/2.0] [expr $b/2.0] \
                    ###                      [expr $h/2.0] [expr ($nflange-1)*$pSteelSpace+$b/2.0] 
                    ###
                    ###patch quadr $coverID  1 2  \
                    ###                      [expr $h/2.0-$PlateDepth] [expr $Bf/2.0] \
                    ###                      [expr $h/2.0-$PlateDepth] [expr ($nflange-1)*$pSteelSpace+$b/2.0] \
                    ###                      [expr $h/2.0] [expr ($nflange-1)*$pSteelSpace+$b/2.0] \
                    ###                      [expr $h/2.0] [expr $Bf/2.0]    
                    ###
                    ###patch quadr $coverID  [expr $nflange-1] 2 \
                    ###                      [expr $h/2.0-$PlateDepth] [expr  -$b/2.0] \
                    ###                      [expr $h/2.0-$PlateDepth] [expr -(($nflange-1)*$pSteelSpace+$b/2.0)] \
                    ###                      [expr $h/2.0] [expr -(($nflange-1)*$pSteelSpace+$b/2.0)] \
                    ###                      [expr $h/2.0] [expr -$b/2.0]
                    ###
                    ###patch quadr $coverID  1 2  \
                    ###                      [expr $h/2.0-$PlateDepth] [expr -(($nflange-1)*$pSteelSpace+$b/2.0)] \
                    ###                      [expr $h/2.0-$PlateDepth] [expr -$Bf/2.0] \
                    ###                      [expr $h/2.0] [expr -$Bf/2.0] \
                    ###                      [expr $h/2.0] [expr -(($nflange-1)*$pSteelSpace+$b/2.0)]   
                    ###
                    ####the steel in the plate one said
                    ###set  numPlateBars  [expr int(($Bf-$b)/2.0/$pSteelSpace)+1]
                    ###set  totalArea     [expr ($Bf/2.0-$b/2.0)*335e-6];# it is only difined with the parameter of  8mm
                    ###set  PlatebarArea  [expr $totalArea/$numPlateBars]
                    ####0.02 is a value make the steel not expose to the endge of concrete
                    ###layer  straight $plateSteelID  $numPlateBars $PlatebarArea   [expr  $h/2.0-($PlateDepth-0.02)] [expr ($nflange-1)*$pSteelSpace+$b/2.0] \
                    ###                                                             [expr  $h/2.0-($PlateDepth-0.02)] [expr $b/2.0];#0.02 is protect depth 
                    ###                            
                    ###layer  straight $plateSteelID  $numPlateBars $PlatebarArea   [expr  $h/2.0-($PlateDepth-0.02)] [expr -$b/2.0] \
                                                                                 [expr  $h/2.0-($PlateDepth-0.02)] [expr -(($nflange-1)*$pSteelSpace+$b/2.0)];#0.02 is protect depth                                                              } 
                 if {$shape == "L"}  {
                    set oneSideLength  [expr $Bf-$b];#Define  one side flange length of the section
                    set nflange        [expr int(($Bf-$b)/$pSteelSpace)+1];# define the number of fiber in one side 
                    patch quadr $coverID  $nflange 2 \
                                          [expr $h/2.0-$PlateDepth] [expr ($nflange-1)*$pSteelSpace+$b/2.0] \
                                          [expr $h/2.0-$PlateDepth] [expr $b/2.0] \
                                          [expr $h/2.0] [expr $b/2.0] \
                                          [expr $h/2.0] [expr ($nflange-1)*$pSteelSpace+$b/2.0] 

                    patch quadr $coverID  1 2 \
                                          [expr $h/2.0-$PlateDepth] [expr $Bf-$b/2.0] \
                                          [expr $h/2.0-$PlateDepth] [expr ($nflange-1)*$pSteelSpace+$b/2.0] \
                                          [expr $h/2.0] [expr ($nflange-1)*$pSteelSpace+$b/2.0] \
                                          [expr $h/2.0] [expr $Bf-$b/2.0]
                   
                    #the steel in the plate one said
                    set  numPlateBars  [expr int(($Bf-$b)/$pSteelSpace)+1]
                    set  totalArea     [expr ($Bf-$b)*335e-6];# it is only difined with the parameter of  8mm
                    set  PlatebarArea  [expr $totalArea/$numPlateBars]
                    layer  straight $plateSteelID  $numPlateBars $PlatebarArea  [expr  $h/2.0-($PlateDepth-0.02)] [expr ($nflange-1)*$pSteelSpace+$b/2.0] \
                                                                                [expr  $h/2.0-($PlateDepth-0.02)] [expr $b/2.0];#0.02 is protect depth         
                                                  
                 }                                                     
     }    
     # Attach shear to the RC beam section
     
     # Define material constitute to represent the relation of shear and deformation of the section
     # Use steel01 to model the "Bilinear" relattionship 
     # Asumping the maxmum V equal to the strengh when incline press damage take in section 
     
     set betac 1.0;# concrete influence confficent
     set k     6/5.0;# section cofficent = 1/0.8333,consider it's same with "rect"
     set afa   1.0/$k
     set V     [expr 0.25*$betac*$fc*$b*($h-0.045)]
     set aGA   [expr $afa*0.40*$E*($b*($h-0.1)+($Bf-$b)*0.1)]

     #set shear "ON"
     set shear "OFF"
     if { $shear == "ON" } {
        #                         matTag         V    GA    b 
        uniaxialMaterial Steel01 [expr 2000+$id] $V   $aGA  0.001
     } 
     if { $shear == "OFF" } {
        #                         matTag         V    GA        b 
        uniaxialMaterial Steel01 [expr 2000+$id] $V   1.0e20    1
     }      
        
     # secTag    matTag    string   sectionTag
     section Aggregator  $id  [expr 2000+$id] Vy -section [expr 2000+$id]

}

#puts "Define a procedure which generates a rectangular reinforced concrete section......"







